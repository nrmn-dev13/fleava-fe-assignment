// ==========================================================================
// Mixins - Reusable SCSS Patterns
// ==========================================================================

// Media Query Mixins
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: #{$breakpoint-xs}) { @content; }
  } @else if $breakpoint == sm {
    @media (max-width: #{$breakpoint-sm}) { @content; }
  } @else if $breakpoint == md {
    @media (max-width: #{$breakpoint-md}) { @content; }
  } @else if $breakpoint == lg {
    @media (max-width: #{$breakpoint-lg}) { @content; }
  } @else if $breakpoint == xl {
    @media (max-width: #{$breakpoint-xl}) { @content; }
  }
}

// Flexbox Mixins
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// Card Shadow Mixin
@mixin card-shadow($hover: false) {
  @if $hover {
    box-shadow: $hover-shadow;
  } @else {
    box-shadow: $card-shadow;
  }
}

// Transition Mixin
@mixin transition($properties...) {
  $transitions: ();
  @each $property in $properties {
    $transitions: append($transitions, $property $transition-base $transition-ease, comma);
  }
  transition: $transitions;
}

// Text Truncate Mixin
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Multiline Text Truncate
@mixin text-truncate-multiline($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Gradient Background Mixin
@mixin gradient-bg($direction: 135deg, $color1: $accent-color, $color2: $accent-secondary) {
  background: linear-gradient($direction, $color1 0%, $color2 100%);
}

// Hover Lift Effect
@mixin hover-lift($distance: -8px) {
  transition: transform $transition-base $transition-ease, box-shadow $transition-base $transition-ease;

  &:hover {
    transform: translateY($distance);
    box-shadow: $hover-shadow;
  }
}

// Image Cover
@mixin image-cover {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
}

// Absolute Center
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Clearfix
@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

// Spinner Animation
@mixin spinner($size: 50px, $border-width: 4px, $color: $light-bg) {
  width: $size;
  height: $size;
  border: $border-width solid rgba(255, 255, 255, 0.3);
  border-top-color: $color;
  border-radius: $border-radius-full;
  animation: spin 1s linear infinite;
}

// Button Reset
@mixin button-reset {
  background: none;
  border: none;
  padding: 0;
  margin: 0;
  font: inherit;
  color: inherit;
  cursor: pointer;
  outline: none;
}

// Link Reset
@mixin link-reset {
  color: inherit;
  text-decoration: none;

  &:hover,
  &:focus,
  &:active {
    color: inherit;
    text-decoration: none;
  }
}

// Scrollbar Styling
@mixin custom-scrollbar($width: 8px, $track-color: #f1f1f1, $thumb-color: #888) {
  &::-webkit-scrollbar {
    width: $width;
  }

  &::-webkit-scrollbar-track {
    background: $track-color;
  }

  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: $border-radius-sm;

    &:hover {
      background: darken($thumb-color, 10%);
    }
  }
}

// Aspect Ratio
@mixin aspect-ratio($width: 16, $height: 9) {
  position: relative;

  &::before {
    content: "";
    display: block;
    padding-top: calc(($height / $width) * 100%);
  }

  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}
